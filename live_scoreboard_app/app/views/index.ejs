<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%=title%></title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Pixelify+Sans&family=Ubuntu+Mono:ital@1&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link href="/index.css" rel="stylesheet" />
    <link href="/notif.css" rel="stylesheet" />
  </head>
  <body>
    <div class="d-flex justify-content-center">
      <div class="container" style="position:absolute;">
        <div class="toast-area" id="toasts">
          <div style="position:absolute; display: none;">
            <div class="toast" id="clonemother">
              <div class="toast-content">
                <div class="before"></div>
                <div class="icon"></div>
                <div class="text">
                  <p class="message-head">a</p>
                  <p class="message"></p>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="button">
          <button id="notif" style="display:none;"=Show notification</button>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-sm">
        <h1 style="color:lightblue;"><%=title%> Scoreboard üèÅ </h1>
        <div id="countdown" style="padding-bottom: 3%;"> Initializing timer.. </div>
        <div>
          <table class="table table-hover table-sm table-borderless table-striped">
            <thead>
              <tr>
                <th scope="col" class="rank">#</th>
                <th scope="col" class="team-name">Team</th>
                <th scope="col" class="team-score">Score</th>
              </tr>
            </thead>
            <tbody id="teams"></tbody>
          </table>
        </div>
      </div>
      <div class="col-sm">
        <h1 style="color:lightblue;"> Activity <i class="fa fa-rss" aria-hidden="true"></i>
        </h1>
        <iframe style="border:0;" scrolling="no" width="100%" height="295%" src="/activity"></iframe>
        <div style="margin-left: 50%;margin-bottom: -70%;">
          <a href="/activity">
            <button type="button" class="btn btn-primary" style="position: absolute;z-index: 99;"> View All <i class="fa fa-arrow-down" aria-hidden="true"></i>
            </button>
          </a>
        </div>
      </div>
    </div>

    <button style="display:none;" onclick="play_firstblood()" id="firstblood_mp3"></button>
    

  </body>
  <script type="text/javascript" src="/js/main.js"></script>
  <script type="text/javascript" src="/js/notif.js"></script>
  <script type="text/javascript" src="/js/confetti.js"></script>
  <script>
  function play_firstblood(){
      var audio = new Audio("./audio/first_blood.mp3");
      audio.volume = 0.05
      audio.play();
  }
  </script>
  <script>
    // confetti code
    const start = () => {
      setTimeout(function() {
        confetti.start()
      }, 1000); // 1000 is time that after 1 second start the confetti ( 1000 = 1 sec)
    };
    const stop = () => {
      setTimeout(function() {
        confetti.stop()
      }, 5000); // 5000 is time that after 5 second stop the confetti ( 5000 = 5 sec)
    };
  </script>
  <script type="text/javascript">
    var PORT = '5000'
    var socket = io('http://localhost:' + PORT)
    const notificationQueue = [];
    let isDisplayingNotification = false;

    function displayNextNotification() {
      if (notificationQueue.length > 0 && !isDisplayingNotification) {
        isDisplayingNotification = true;
        const notification = notificationQueue.shift(); // Get the next notification
        start()
        stop()
        
        $("#firstblood_mp3").click();
        notif(notification);
        // After a delay, hide the notification and move to the next one
        setTimeout(() => {
          isDisplayingNotification = false;
          displayNextNotification(); // Display the next notification in the queue
        }, 11000); // Adjust the delay as needed
      }
    }

    function render(jsonData) {
      var output = ''
      const table = document.getElementById('teams');
      for (const key in jsonData) {
        if (jsonData.hasOwnProperty(key)) {
          if (key == 1) {
            k = "ü•á"
            c = "table-primary"
          } else if (key == 2) {
            k = "ü•à"
          } else if (key == 3) {
            k = "ü•â"
          } else {
            k = key.toString()
          }
          d = jsonData[key].date
          output = output + '<tr id="'+jsonData[key].team+'"> \
                                 <td> '+k+' </td>\
                                 <td> '+jsonData[key].team+'<br> \
                                    <small style="color:gray;"> \
                                       <b> '+jsonData[key].num_solves+' </b> CHALLENGES SOLVED\
                                    </small>\
                                    <br>\
                                 </td>\
                                 <td> \
                                    <span class="badge badge-primary rounded-pill d-inline"> '+jsonData[key].score +'</span>\
                                 </td> \ <td id="out"></td>\
                              </tr>'
        }
      }
      $('#teams').html(output)
    }
    socket.on('update', (message) => {
      render(message)
    })
    socket.on('firstblood', (message) => {
      out = "<center> FIRST BLOODü©∏ </center><br>\
            <span> Congratuations to team \"" + message.team + "\" <br>\
                   for first blooding the challenge \"" + message.challenge + "\"!\
            </span><br>\
            <small> "+parseDateTime(message.date)+" </small>"
      notificationQueue.push(out);
      if (!isDisplayingNotification) {
        displayNextNotification()
      }
    })

    function parseDateTime(dateTimeString) {
      const dateTime = new Date(dateTimeString);
      const hours = dateTime.getHours();
      const minutes = dateTime.getMinutes();
      const seconds = dateTime.getSeconds();
      const amPm = hours >= 12 ? "PM" : "AM";
      const formattedHours = hours % 12 || 12; // Convert 0 to 12 for noon/midnight
      const formattedTime = `${formattedHours} ${amPm}, ${minutes} MIN, ${seconds} SEC`;
      return formattedTime;
    }
  </script>
  <script>
    function countdown() {
      var timer = null;
      var end;
      var toZero;
      var start = new Date('<%=start%>');
      var finish = new Date('<%=finish%>');
      var now = new Date()
      var date = (finish.getTime() - now.getTime()) / 1000;
      var day = Math.floor(date / (60 * 60 * 24));
      var _hour = date - day * 60 * 60 * 24;
      var hour = Math.floor(_hour / (60 * 60));
      var _minute = _hour - hour * 60 * 60;
      var minute = Math.floor(_minute / (60));
      var _second = _minute - minute * 60;
      var second = Math.floor(_second);
      if (now > start) {
        // currently running
        $("#countdown").html("<span style='color:orange;'> Ends in: "+day+"\
          Days, "+hour+"\
          Hours, "+minute+"\
          Minutes, "+second+"\
          Seconds. </span>");  
        }
        else if (now == finish) {
          // just ended right now
          // confetti in ending
          $("#countdown").html("<span style='color:red;'> SparkCTF Ended!GGs </span>");
          }
          else if (now > finish) {
            $("#countdown").html(" <span style='color:red;'> SparkCTF Ended!GGs </span>");
            }
            else if (now < start) {
              // didnt start yep
              $("#countdown").html("<span style='color:lightgreen;'> Starts in: "+day+"\
                Days, "+hour+"\
                Hours, "+minute+"\
                Minutes, "+second+"\
                Seconds. </span>");
              }
            }
            setInterval('countdown()', 1000);
  </script>
  <script></script>
  </body>
</html>