<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%=title%></title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Pixelify+Sans&family=Ubuntu+Mono:ital@1&display=swap" rel="stylesheet" />
    <script src="https://unpkg.com/powerglitch@latest/dist/powerglitch.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link href="/index.css" rel="stylesheet" />
    <style>
      * {
        margin: 0 !important;
      }

      .list-group-item {
        position: relative;
        display: block;
        padding: 10px 15px;
        margin-bottom: -1px;
        background-color: #15151E;
        border: 1px solid transparent;
      }

      .slide-in-top {
        -webkit-animation: slide-in-top 2s cubic-bezier(.25, .46, .45, .94) both;
        animation: slide-in-top 2s cubic-bezier(.25, .46, .45, .94) both
      }

      @-webkit-keyframes slide-in-top {
        0% {
          -webkit-transform: translateY(-1000px);
          transform: translateY(-1000px);
          opacity: 0
        }

        100% {
          -webkit-transform: translateY(0);
          transform: translateY(0);
          opacity: 1
        }
      }

      @keyframes slide-in-top {
        0% {
          -webkit-transform: translateY(-1000px);
          transform: translateY(-1000px);
          opacity: 0
        }

        100% {
          -webkit-transform: translateY(0);
          transform: translateY(0);
          opacity: 1
        }
      }
      ul.list-group.list-group-striped li:nth-of-type(odd){
        
        background: #2b2b3a;
      }

      ul.list-group.list-group-hover li:hover{
        background: green !important; 
      }

    </style>
  </head>
  <body>
    <div class="panel" style="display: block">
      <div class="panel-body">
        <ul class="list-group list-group-striped list-group-hover">
          <div class="feed"></div>
        </ul>
      </div>
    </div>
  </body>
   <script type="text/javascript" src="/js/main.js"></script>
   <script type="text/javascript">
      var PORT = '5000'
      var socket = io('http://localhost:'+PORT)
      
      
      function render(data) {
        var output =''
        d = data.date
        title="NEW Solve!ðŸŽ‰"
        desc="just solved"
        if (data['firstblood'] == 1){
            title="NEW BLOOD!ðŸ©¸"
            desc="first blooded"
        }
        output=output+'<li class="slide-in-top list-group-item">\
                        <div class="media">\
                          <div class="media-body">\
                            <small class="text-muted pull-right" id="time">'+parse(data['date'])+'</small>\
                            <h4 class="media-heading">'+title+'</h4>\
                            <div>\
                              User <b>"'+data['user']+'</b> from team <b>'+data['team']+'</b> '+desc+' <b>"'+data['challenge']+'"</b>\
                            </div>\
                          </div>\
                        </div>\
                       </li>'
         $('.feed').prepend(output)
      }    
      socket.on("clean", (socket) => {
        $('.feed').text('')
      });

      socket.on('solve', (message) => {
        render(message)
      })

      function parse(date) {
        const dateObj = new Date(date)
        const year = dateObj.getUTCFullYear();
        const month = (dateObj.getUTCMonth() + 1).toString().padStart(2, '0');
        const day = dateObj.getUTCDate().toString().padStart(2, '0');
        const hour = dateObj.getUTCHours().toString().padStart(2, '0');
        const minutes = dateObj.getUTCMinutes().toString().padStart(2, '0');
        const seconds = dateObj.getUTCSeconds().toString().padStart(2, '0');
        const formattedDate = `${day}/${month}/${year} - ${hour}:${minutes}:${seconds}`;
        return formattedDate;
      }
      
   </script>
   </body>
</html>